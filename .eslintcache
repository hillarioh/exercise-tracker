[{"/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/index.js":"1","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/App.js":"2","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/reportWebVitals.js":"3","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/navbar.component.js":"4","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/exercises-list.component.js":"5","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/edit-exercise.component.js":"6","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/create-exercise.component.js":"7","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/create-user.component.js":"8"},{"size":479,"mtime":1611660145573,"results":"9","hashOfConfig":"10"},{"size":818,"mtime":1611733786435,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611649062226,"results":"12","hashOfConfig":"10"},{"size":868,"mtime":1611664810944,"results":"13","hashOfConfig":"10"},{"size":193,"mtime":1611722670872,"results":"14","hashOfConfig":"10"},{"size":193,"mtime":1611672756741,"results":"15","hashOfConfig":"10"},{"size":3038,"mtime":1611739235632,"results":"16","hashOfConfig":"10"},{"size":1057,"mtime":1611737896472,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ruo47e",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/index.js",[],["38","39"],"/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/App.js",[],"/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/reportWebVitals.js",[],"/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/navbar.component.js",[],"/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/exercises-list.component.js",["40"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ExercisesList() {\n  return (\n    <div>\n      <p>Exercise List</p>\n    </div>\n  );\n}\n\nexport default ExercisesList;\n","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/edit-exercise.component.js",["41"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction EditExercises() {\n  return (\n    <div>\n      <p>edit exercise</p>\n    </div>\n  );\n}\n\nexport default EditExercises;\n","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/create-exercise.component.js",["42"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction CreateExercise() {\n  const [exercise, setExercise] = useState({\n    username: \"\",\n    description: \"\",\n    duration: 0,\n    date: new Date(),\n    users: [],\n  });\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users/\").then((response) => {\n      if (response.data.length > 0) {\n        setExercise({\n          ...exercise,\n          username: response.data[0].username,\n          users: response.data.map((user) => user.username),\n        });\n      }\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(exercise);\n\n    axios\n      .post(\"http://localhost:5000/exercises/add\", {\n        username: exercise.username,\n        description: exercise.description,\n        duration: exercise.duration,\n        date: exercise.date,\n      })\n      .then((res) => console.log(res.data));\n\n    window.location = \"/\";\n  };\n\n  return (\n    <div className=\"container\">\n      <h3>Create New Exercise Log</h3>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username: </label>\n          <select\n            required\n            className=\"form-control\"\n            value={exercise.username}\n            onChange={(e) =>\n              setExercise({ ...exercise, username: e.target.value })\n            }\n          >\n            {exercise.users.map((user) => {\n              return (\n                <option key={user} value={user}>\n                  {user}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description: </label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            value={exercise.description}\n            onChange={(e) =>\n              setExercise({ ...exercise, description: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"duration\">Duration (in minutes): </label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            value={exercise.duration}\n            onChange={(e) =>\n              setExercise({ ...exercise, duration: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"date\">Date: </label>\n          <div>\n            <DatePicker\n              selected={exercise.date}\n              onChange={(e) => setExercise({ ...exercise, date: e })}\n            ></DatePicker>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create Exercise Log\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateExercise;\n","/home/lecrae/Developer/backend/nodejs/mern-exercise-tracker/src/components/create-user.component.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":14},{"ruleId":"47","severity":1,"message":"48","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":14},{"ruleId":"51","severity":1,"message":"52","line":25,"column":6,"nodeType":"53","endLine":25,"endColumn":8,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'exercise'. Either include it or remove the dependency array. You can also do a functional update 'setExercise(e => ...)' if you only need 'exercise' in the 'setExercise' call.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [exercise]",{"range":"60","text":"61"},[660,662],"[exercise]"]